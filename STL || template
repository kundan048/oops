//stl
/*Templates are a feature of the c++ programming language that allows
  functions and classes to operate with generic types. This allows a 
  function or a class to work on many different data types without being
  rewritten for each one.
*/

//What are generic functions or classes?
/*Many times while programming, there is a need for creating functions
  which perform the same operations but work with different data types.
  So c++ provides a feature to create a single generic function instead
  of many functions which can work with different data type by using
  the template parameter.
*/

//What is template parameter?
/*The way we use normal parameters to pass as a value to function, in the
  same manner template parameters can be used to pass type as argument to
  function. Basically, it tells what type of data is being passed to the
  function.
*/


//*************SYNTAX**************//
// 			template <class TYPE> return-type function-name (parameter-list)


//TYPE
/*Here, 'TYPE' is just a placeholder used to store the data type when this 
  function is used you can use any other name instead class is used to specify
  the generic type of template, alternatively typename can be used instead of it.
*/



/******************************************************************************/

/*Assume we have to swap two variables of int type and two of float type. Then,
  we will have to make two functions where one can swap int type variables and the
  other one can swap float type variables. But here if we use a generic function,
  then we can simply make one function and can swap both type of variables by passing
  their different type in the arguments.
*/

/***************IMPLEMENTATION*********************/


#include<iostream>
#include<bits/stdc++.h>
using namespace std;
//creating a generic function 'swap(parameter-list)' using template :
template <class X> 
void swaps(X &a, X &b)
{
	X tp;
	tp = a;
	a = b;
	b = tp;
	cout<<"Swapped elements values of a and b are "<<a<<" and "<<b<<" respectively "<<endl;
	
}

int main()
{
	int a = 10, b=20;
	float c = 10.5, d = 20.5;
	swaps(a,b);   // swapping for int elements;
//	swap(a,c);   // swapping for int and float elements; *****error****** not allowed
	swaps(c,d);   // swapping for float elements;
	return 0;
}

	
